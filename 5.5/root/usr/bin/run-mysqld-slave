#!/bin/bash
#
# This is an entrypoint that runs the MySQL server in the 'slave' mode.
#
. "/usr/share/container-lib/container-lib.sh"

cont_source_hooks include mysql

set -eu

# Define server role for this container
export MYSQL_REPLICATION_ROLE=slave

cont_source_hooks pre-init mysql

validate_replication_variables

# Generate the unique 'server-id' for this master
export MYSQL_SERVER_ID=$(server_id)
echo "The 'slave' server-id is ${MYSQL_SERVER_ID}"

# Check whether the server supports GTID
if ${MYSQL_PREFIX}/libexec/mysqld --help --verbose 2>&1 | grep -e '^gtid-mode' &>/dev/null ; then
  export MYSQL_GTID_SUPPORT=1
  echo "GTID support is available"
else
  export MYSQL_GTID_SUPPORT=0
  echo "GTID support is unavailable"
fi

# Process the MySQL configuration files
envsubst < /usr/share/container-layer/mysql/my-slave.cnf.template > /etc/my.cnf.d/slave.cnf

# Set GTID settings if we run version that supports GTID
if [ $MYSQL_GTID_SUPPORT -eq 1 ] ; then
  envsubst < /usr/share/container-layer/mysql/my-repl-gtid.cnf.template > /etc/my.cnf.d/gtid.cnf
fi

# Initialize MySQL database and wait for the MySQL master to accept connections
# This will also disable the database and user creation (the data will be
# fetched from the 'master' server).
export MYSQL_DISABLE_CREATE_DB=1
start_with_initialize_database
wait_for_mysql_master

if [ $MYSQL_GTID_SUPPORT -eq 1 ] ; then
  # We don't need explicit binlog position when using GTID
  mysql $mysql_flags <<EOSQL
    CHANGE MASTER TO MASTER_HOST='$(mysql_master_addr)',MASTER_USER='${MYSQL_MASTER_USER}', MASTER_PASSWORD='${MYSQL_MASTER_PASSWORD}';
EOSQL
else
  # Get binlog file and position from master
  STATUS_INFO=$(mysql --host "$(mysql_master_addr)" "-u${MYSQL_MASTER_USER}" "-p${MYSQL_MASTER_PASSWORD}" -e 'SHOW MASTER STATUS\G')
  BINLOG_POSITION=$(echo "$STATUS_INFO" | grep 'Position:' | head -n 1 | sed -e 's/^\s*Position: //')
  BINLOG_FILE=$(echo "$STATUS_INFO" | grep 'File:' | head -n 1 | sed -e 's/^\s*File: //')

  if [ -z "${BINLOG_FILE}" -o -z "${BINLOG_POSITION}" ] ; then
    echo "Could not read binlog position or file from master"
    exit 1
  fi

  mysql $mysql_flags <<EOSQL
    CHANGE MASTER TO MASTER_HOST='$(mysql_master_addr)',MASTER_USER='${MYSQL_MASTER_USER}', MASTER_PASSWORD='${MYSQL_MASTER_PASSWORD}', MASTER_LOG_FILE='${BINLOG_FILE}', MASTER_LOG_POS=${BINLOG_POSITION};
    SET GLOBAL SQL_SLAVE_SKIP_COUNTER = 1; SLAVE START;
EOSQL
fi

# Restart the MySQL server with public IP bindings
mysqladmin $admin_flags flush-privileges shutdown
unset_env_vars
exec ${MYSQL_PREFIX}/libexec/mysqld --report-host=$(hostname -i) "$@" 2>&1
