apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: my-release-mysql
  labels:
    app: "mysql"
    component: "master"
    release: "my-release"
spec:
  selector:
    matchLabels:
      release: "my-release"
      component: "master"
      app: "mysql"
  serviceName: "my-release-mysql"
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "mysql"
        component: "master"
        release: "my-release"
    spec:
      serviceAccountName: "default"
      securityContext: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "mysql"
                  release: "my-release"      
      initContainers:
      containers:
      - name: "mysql"
        image: docker-registry.default.svc:5000/imagen-mysql/my-mysql-rhel7@sha256:5d3373c2ef664f94d8d26ef4ca8c847133a85fab8c0fdc07452fbc1a558e60d4
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MYSQL_OPERATIONS_USER
          value: "opdb"
        - name: MYSQL_OPERATIONS_PASSWORD
          value: "oppass"
        - name: MYSQL_PASSWORD
          value: "pass"
        - name: MYSQL_DATABASE
          value: "opdb"
        - name: MYSQL_ROOT_PASSWORD
          value: "passs"
        - name: MYSQL_USER
          value: "user"
        ports:
        - name: mysql
          containerPort: 3306
        livenessProbe:
          exec:
            command: ["sh", "-c", "exec mysqladmin status -u$MYSQL_USER -p$MYSQL_PASSWORD"]
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command: ["sh", "-c", "exec mysqladmin status -u$MYSQL_USER -p$MYSQL_PASSWORD"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources: {}
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql/data
          subPath: data
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: "mysql"
          component: "master"
          release: "my-release"
      spec:
        accessModes:
          - "ReadWriteMany"
        resources:
          requests:
            storage: "8Gi"
